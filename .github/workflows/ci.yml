name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.12'
  DJANGO_SETTINGS_MODULE: 'pharmacy_project.settings'

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_pharmalink
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up test database
      run: |
        python manage.py makemigrations
        python manage.py migrate
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_pharmalink
        
    - name: Run Django system checks
      run: |
        python manage.py check
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_pharmalink
        
    - name: Run Django tests
      run: |
        python manage.py test --verbosity=2
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_pharmalink

  # --- Staging job is temporarily disabled until you create the staging service on Render ---
  # deploy-staging:
  #   name: Deploy to Staging
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
      
  #   - name: Deploy to Render Staging
  #     uses: johnbeynon/render-deploy-action@v0.0.8
  #     with:
  #       service-id: ${{ secrets.RENDER_STAGING_SERVICE_ID }}
  #       api-key: ${{ secrets.RENDER_API_KEY }}
        
  #   - name: Verify staging deployment
  #     run: |
  #       echo "Staging deployment completed successfully"
  #       echo "Staging URL: https://pharmalink-backend-staging.onrender.com"

  deploy-production:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Render Production
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_PRODUCTION_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        
    - name: Verify production deployment
      run: |
        echo "Production deployment completed successfully"
        echo "Production URL: https://pharmalink-backend.onrender.com"